FROM python:3.11-slim AS python-base

ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=off \
    PIP_DISABLE_PIP_VERSION_CHECK=on \
    PIP_DEFAULT_TIMEOUT=100 \
    PIP_ROOT_USER_ACTION=ignore \
    POETRY_VIRTUALENVS_IN_PROJECT=1 \
    POETRY_VIRTUALENVS_CREATE=1 \
    POETRY_NO_INTERACTION=1

ARG USER_NAME=default_user
ARG ostype=Linux
ARG USER_ID
ARG GROUP_ID

ENV WORK_DIR=/code
ENV USER_NAME=${USER_NAME}
ENV ENV=LOCAL
ENV PORT=8000


# ----- builder-base ----- #
FROM python-base AS builder-base

RUN pip install --upgrade pip && pip install poetry==1.5.0

WORKDIR ${WORK_DIR}

COPY poetry.lock pyproject.toml ./

RUN poetry install --without dev


# ----- server ----- #
FROM python-base AS server
ENV VENV_PATH="$WORK_DIR/.venv"
ENV PATH="$VENV_PATH/bin:$PATH"
RUN bash -c 'groupadd -r --gid ${GROUP_ID} ${USER_NAME} && \
    useradd -r --create-home --shell /bin/bash --uid ${USER_ID} --gid ${GROUP_ID} ${USER_NAME}' && \
    mkdir -p ${WORK_DIR} && chown ${USER_NAME} ${WORK_DIR}


COPY --from=builder-base $VENV_PATH $VENV_PATH

WORKDIR ${WORK_DIR}

COPY --chown=${USER_NAME}:${USER_NAME} . .

RUN apt-get update && apt-get install -y wget

ENV DOCKERIZE_VERSION v0.6.1
RUN wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
    && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
    && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
USER ${USER_NAME}

RUN chmod a+x ${WORK_DIR}/docker/api/startup.sh
ENTRYPOINT ${WORK_DIR}/docker/api/startup.sh
